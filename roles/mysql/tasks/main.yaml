- name: Download mysql-server
  ansible.builtin.apt:
    name: mysql-server
    state: present

- name: Download python-pymysql
  ansible.builtin.apt:
    name: python3-pymysql
    state: present

- name: copy the mysql config file and restart mysql server
  ansible.builtin.copy:
    src: ../files/override.cnf
    dest: /etc/mysql/mysql.conf.d/override.cnf
  notify: restart mysql

- name: MySQL database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: MySQL user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true
  notify: restart mysql

- name: Install mysql exporter
  ansible.builtin.apt:
    name: prometheus-mysqld-exporter

- name: Configure MySQL exporter
  ansible.builtin.template:
    src: my.prometheus.cnf.j2
    dest: /var/lib/prometheus/.my.cnf
  no_log: true
  notify: restart mysql exporter

- name: Mysql services
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - mysql
    - prometheus-mysqld-exporter

- name: Backup directory
  ansible.builtin.file:
    state: directory
    owner: backup
    group: backup
    path: /home/backup/mysql
    mode: '0770'

- name: Backup user
  community.mysql.mysql_user:
    name: "{{ mysql_backup_user }}"
    host: "%"
    password: "{{mysql_backup_password}}"
    priv: "{{ mysql_database }}.*:LOCK TABLES,SELECT"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true
  notify: restart mysql

- name: Mysql backup user config
  ansible.builtin.template:
    dest: /home/backup/.my.cnf
    src: my.backup.cnf.j2
    owner: backup
    group: backup
    mode: '0440'
  no_log: true
  notify: restart mysql exporter

- name: Cron tab for mysql backup
  ansible.builtin.template:
    src: ../files/mysql-backup
    dest: /etc/cron.d/mysql-backup
